plugins {
    id 'org.springframework.boot' version '3.2.1'
    id "com.google.protobuf" version "0.9.4"
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
}

dependencies {
    implementation project(':gcp:on-demand-spring-boot-starter-gcp-grpc')
    implementation project(':gcp:spring-boot-starter-gcp-grpc')
    implementation project(':gcp:request-response-spring-boot-starter-gcp-grpc')
    implementation project(':trace:server:correlation-id-trace-grpc-netty')

    implementation project(':trace:mdc-context-grpc-netty')

    implementation("io.grpc:grpc-api:$grpcVersion")
    implementation("io.grpc:grpc-core:$grpcVersion")
    implementation("io.grpc:grpc-context:$grpcVersion")
    implementation("io.grpc:grpc-stub:$grpcVersion")
    //implementation("io.grpc:grpc-inprocess:$grpcVersion")
    implementation("io.grpc:grpc-services:$grpcVersion")
    implementation("io.grpc:grpc-netty:$grpcVersion")
    implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")

    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    // JUnit Jupiter API and TestEngine implementation
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    testImplementation ("com.google.truth:truth:${googleTruthVersion}")
    testImplementation ("com.google.truth.extensions:truth-java8-extension:${googleTruthVersion}")
}

sourceSets {
    test.java.srcDirs += "${protobuf.generatedFilesBaseDir}/test/java"
    test.java.srcDirs += "${protobuf.generatedFilesBaseDir}/test/grpc"
}

tasks.compileTestJava { dependsOn("generateTestProto") }

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${grpcProtobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
